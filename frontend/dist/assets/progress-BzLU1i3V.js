import{t as $,c as D}from"./format-DIePDvv_.js";import{r as u,j as i,z as I}from"./main-mKPugC2G.js";import{c as E,P as v}from"./index-Dvnq6tvE.js";function R(r,e){const t=$(r);return isNaN(e)?D(r,NaN):(e&&t.setDate(t.getDate()+e),t)}function F(r,e){return R(r,-e)}var d="Progress",c=100,[_,G]=E(d),[j,w]=_(d),m=u.forwardRef((r,e)=>{const{__scopeProgress:t,value:s=null,max:a,getValueLabel:b=M,...h}=r;(a||a===0)&&!f(a)&&console.error(V(`${a}`,"Progress"));const o=f(a)?a:c;s!==null&&!p(s,o)&&console.error(A(`${s}`,"Progress"));const n=p(s,o)?s:null,y=l(n)?b(n,o):void 0;return i.jsx(j,{scope:t,value:n,max:o,children:i.jsx(v.div,{"aria-valuemax":o,"aria-valuemin":0,"aria-valuenow":l(n)?n:void 0,"aria-valuetext":y,role:"progressbar","data-state":P(n,o),"data-value":n??void 0,"data-max":o,...h,ref:e})})});m.displayName=d;var g="ProgressIndicator",x=u.forwardRef((r,e)=>{const{__scopeProgress:t,...s}=r,a=w(g,t);return i.jsx(v.div,{"data-state":P(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...s,ref:e})});x.displayName=g;function M(r,e){return`${Math.round(r/e*100)}%`}function P(r,e){return r==null?"indeterminate":r===e?"complete":"loading"}function l(r){return typeof r=="number"}function f(r){return l(r)&&!isNaN(r)&&r>0}function p(r,e){return l(r)&&!isNaN(r)&&r<=e&&r>=0}function V(r,e){return`Invalid prop \`max\` of value \`${r}\` supplied to \`${e}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${c}\`.`}function A(r,e){return`Invalid prop \`value\` of value \`${r}\` supplied to \`${e}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${c} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var N=m,S=x;const C=u.forwardRef(({className:r,value:e,...t},s)=>i.jsx(N,{ref:s,className:I("relative h-2 w-full overflow-hidden rounded-full bg-primary/20",r),...t,children:i.jsx(S,{className:"h-full w-full flex-1 bg-primary transition-all",style:{transform:`translateX(-${100-(e||0)}%)`}})}));C.displayName=N.displayName;export{C as P,F as s};
