const l="/api/public";async function p(e={},o){const a=await fetch(`${l}/getFilterOptions`,{method:"POST",headers:{"content-type":"application/json",accept:"application/json"},body:JSON.stringify({data:{}}),signal:o});if(a.status===422){const t=await a.json().catch(()=>({message:"Validation error"}));throw console.error("getFilterOptions validation error",(t==null?void 0:t.fieldErrors)||t),new Error("Invalid filters request. Please adjust and retry.")}if(!a.ok)throw new Error(`getFilterOptions ${a.status}`);return a.json()}async function f(e,o){var i,s,n,c;const a={data:{search:{q:e.q??"",mode:e.mode??"all"},filters:e.filters??{},dateRange:{from:((i=e.dateRange)==null?void 0:i.from)??void 0,to:((s=e.dateRange)==null?void 0:s.to)??void 0},pagination:{limit:((n=e.pagination)==null?void 0:n.limit)??10,offset:((c=e.pagination)==null?void 0:c.offset)??0}}},t=await fetch(`${l}/searchCompanies`,{method:"POST",headers:{"content-type":"application/json",accept:"application/json"},body:JSON.stringify(a),signal:o});if(t.status===422){const r=await t.json().catch(()=>({message:"Validation error"}));throw console.error("searchCompanies validation error",(r==null?void 0:r.fieldErrors)||r),new Error("Your search has invalid parameters. Please review filters.")}if(!t.ok)throw new Error(`searchCompanies ${t.status}`);return t.json()}export{p as g,f as s};
